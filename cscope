"

if ! has("cscope")
	finish
endif

set cscopetag

set cscopetagorder	=1 " tags file, then cscope
set cscopequickfix	=s-,c-,d-,i-,t-,e-

" only be verbose about it on the initial load
"
set nocscopeverbose
	if filereadable("cscope.out")
		cscope add cscope.out
	elseif $CSCOPE_DB != ""
		cscope add $CSCOPE_DB
	endif
set cscopeverbose


let cscope_help_text = '
	\  c: (Calls)	find functions calling this function
	\  d: (calleD)	find functions called by this function
	\  e: (Egrep)	find this egrep pattern
	\  f: (File)	find this file
	\  g: (Global)	find this definition
	\  i: (Include)	find files #including this file
	\  s: (Symbol)	find this C symbol
	\  t: (To)	find assignments to
\'

nnoremap csc :cs find c <C-R>=expand("<cword>")<CR><CR>
nnoremap csd :cs find d <C-R>=expand("<cword>")<CR><CR>
nnoremap cse :cs find e <C-R>=expand("<cword>")<CR><CR>
nnoremap csf :cs find f <C-R>=expand("<cfile>")<CR><CR>
nnoremap csg :cs find g <C-R>=expand("<cword>")<CR><CR>
nnoremap csi :cs find i ^<C-R>=expand("<cfile>")<CR>$<CR>
nnoremap css :cs find s <C-R>=expand("<cword>")<CR><CR>
nnoremap cst :cs find t <C-R>=expand("<cword>")<CR><CR>
nmap csh :confirm "" "$cscope_help_text" Info<return>

nmap <c-/> :cn<return>
nmap <c-m> :cp<return>

